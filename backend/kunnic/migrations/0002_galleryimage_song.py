# Generated by Django 5.2.4 on 2025-08-04 17:59

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('kunnic', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Image for the gallery', upload_to='gallery/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, help_text='Caption for the image', max_length=255, null=True, verbose_name='Caption')),
                ('upload_date', models.DateTimeField(auto_now_add=True, help_text='Date and time when the image was uploaded', verbose_name='Upload Date')),
            ],
            options={
                'verbose_name': 'Gallery Image',
                'verbose_name_plural': 'Gallery Images',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the song', max_length=200, verbose_name='Title')),
                ('artist', models.CharField(help_text='Artist of the song', max_length=100, verbose_name='Artist')),
                ('audio_file', models.FileField(help_text='Audio file of the song', upload_to='songs/', verbose_name='Audio File')),
                ('lyrics', models.TextField(blank=True, help_text='Lyrics of the song', null=True, verbose_name='Lyrics')),
                ('release_date', models.DateField(help_text='Release date of the song', verbose_name='Release Date')),
                ('upload_date', models.DateTimeField(auto_now_add=True, help_text='Date and time when the song was created', verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Song',
                'verbose_name_plural': 'Songs',
                'ordering': ['-release_date'],
            },
        ),
    ]
